dir()
help(update.packages)
# Re-build the package and publishes it
#
if(!library(devtools)){
install.packages("devtools")
library("devtools")
}
if(require(devtools)){
project.path <- "/Users/David/Documents/miscr1/"
source.path <- paste0(project.path, "Source/")
package.path <- paste0(project.path, "/Package/")
setwd(source.path)
# TODO (DMD): Add auto-incrementation of the
#             version number in the DESCRIPTION file.
# First, build the development version,
# in R these are named "bundles".
devtools::build(path = package.path,
binary = FALSE)
# Then, build the binary version,
# for non-developers.
devtools::build(path = package.path,
binary = TRUE)
# The build will be located here:
bundle.filename <- dir("/Users/David/Documents/miscr1/", pattern="*.tar.gz")
bundle.original.path <- paste0(package.path,"/",bundle.filename)
bundle.destination.path <- paste0(package.path,"/miscr1.tar.gz")
file.rename(from = bundle.original.path,
to = bundle.destination.path)
}else{
error("please install devtools")
}
# Re-build the package and publishes it
#
if(!library(devtools)){
install.packages("devtools")
library("devtools")
}
if(require(devtools)){
project.path <- "/Users/David/Documents/miscr1/"
source.path <- paste0(project.path, "Source/")
package.path <- paste0(project.path, "/Package/")
setwd(source.path)
# TODO (DMD): Add auto-incrementation of the
#             version number in the DESCRIPTION file.
# First, build the development version,
# in R these are named "bundles".
devtools::build(path = package.path,
binary = FALSE)
# Then, build the binary version,
# for non-developers.
devtools::build(path = package.path,
binary = TRUE)
# The build will be located here:
bundle.filename <- dir("/Users/David/Documents/miscr1/", pattern="*.tar.gz")
bundle.original.path <- paste0(package.path,"/",bundle.filename)
bundle.destination.path <- paste0(package.path,"/miscr1.tar.gz")
file.rename(from = bundle.original.path,
to = bundle.destination.path)
}else{
error("please install devtools")
}
# Re-build the package and publishes it
#
if(!library(devtools)){
install.packages("devtools")
library("devtools")
}
if(require(devtools)){
project.path <- "/Users/David/Documents/miscr1/"
source.path <- paste0(project.path, "Source/")
package.path <- paste0(project.path, "/Package/miscr1.tar.gz")
setwd(source.path)
# TODO (DMD): Add auto-incrementation of the
#             version number in the DESCRIPTION file.
# First, build the development version,
# in R these are named "bundles".
devtools::build(path = package.path,
binary = FALSE)
# Then, build the binary version,
# for non-developers.
devtools::build(path = package.path,
binary = TRUE)
# The build will be located here:
#bundle.filename <- dir("/Users/David/Documents/miscr1/", pattern="*.tar.gz")
#bundle.original.path <- paste0(package.path,"/",bundle.filename)
#bundle.destination.path <- paste0(package.path,"/miscr1.tar.gz")
#file.rename(from = bundle.original.path,
#            to = bundle.destination.path)
}else{
error("please install devtools")
}
# Re-build the package and publishes it
#
if(!library(devtools)){
install.packages("devtools")
library("devtools")
}
if(require(devtools)){
project.path <- "/Users/David/Documents/miscr1/"
source.path <- paste0(project.path, "Source/")
package.path <- paste0(project.path, "/Package/miscr1.tar.gz")
setwd(source.path)
# TODO (DMD): Add auto-incrementation of the
#             version number in the DESCRIPTION file.
# First, build the development version,
# in R these are named "bundles".
devtools::build(path = package.path,
binary = FALSE)
# Then, build the binary version,
# for non-developers.
devtools::build(path = package.path,
binary = TRUE)
# The build will be located here:
#bundle.filename <- dir("/Users/David/Documents/miscr1/", pattern="*.tar.gz")
#bundle.original.path <- paste0(package.path,"/",bundle.filename)
#bundle.destination.path <- paste0(package.path,"/miscr1.tar.gz")
#file.rename(from = bundle.original.path,
#            to = bundle.destination.path)
}else{
error("please install devtools")
}
library(devtools)
not(library(devtools))
# Re-build the package and publishes it
#
if(!require(devtools)){
install.packages("devtools")
library("devtools")
}
if(require(devtools)){
project.path <- "/Users/David/Documents/miscr1/"
source.path <- paste0(project.path, "Source/")
package.path <- paste0(project.path, "/Package/miscr1.tar.gz")
setwd(source.path)
# TODO (DMD): Add auto-incrementation of the
#             version number in the DESCRIPTION file.
# First, build the development version,
# in R these are named "bundles".
devtools::build(path = package.path,
binary = FALSE)
# Then, build the binary version,
# for non-developers.
devtools::build(path = package.path,
binary = TRUE)
# The build will be located here:
#bundle.filename <- dir("/Users/David/Documents/miscr1/", pattern="*.tar.gz")
#bundle.original.path <- paste0(package.path,"/",bundle.filename)
#bundle.destination.path <- paste0(package.path,"/miscr1.tar.gz")
#file.rename(from = bundle.original.path,
#            to = bundle.destination.path)
}else{
error("please install devtools")
}
# Re-build the package and publishes it
#
if(!require(devtools)){
install.packages("devtools")
library("devtools")
}
if(require(devtools)){
project.path <- "/Users/David/Documents/miscr1/"
source.path <- paste0(project.path, "Source/")
package.path <- paste0(project.path, "/Package/miscr1.tar.gz")
setwd(source.path)
# TODO (DMD): Add auto-incrementation of the
#             version number in the DESCRIPTION file.
# First, build the development version,
# in R these are named "bundles".
devtools::build(path = package.path,
binary = FALSE)
# Then, build the binary version,
# for non-developers.
devtools::build(path = package.path,
binary = TRUE)
# The build will be located here:
#bundle.filename <- dir("/Users/David/Documents/miscr1/", pattern="*.tar.gz")
#bundle.original.path <- paste0(package.path,"/",bundle.filename)
#bundle.destination.path <- paste0(package.path,"/miscr1.tar.gz")
#file.rename(from = bundle.original.path,
#            to = bundle.destination.path)
}else{
error("please install devtools")
}
# Re-build the package and publishes it
#
if(!require(devtools)){
install.packages("devtools")
library("devtools")
}
if(require(devtools)){
project.path <- "/Users/David/Documents/miscr1/"
source.path <- paste0(project.path, "Source")
package.path <- paste0(project.path, "/Package/miscr1.tar.gz")
setwd(source.path)
# TODO (DMD): Add auto-incrementation of the
#             version number in the DESCRIPTION file.
# First, build the development version,
# in R these are named "bundles".
devtools::build(path = package.path,
binary = FALSE)
# Then, build the binary version,
# for non-developers.
devtools::build(path = package.path,
binary = TRUE)
# The build will be located here:
#bundle.filename <- dir("/Users/David/Documents/miscr1/", pattern="*.tar.gz")
#bundle.original.path <- paste0(package.path,"/",bundle.filename)
#bundle.destination.path <- paste0(package.path,"/miscr1.tar.gz")
#file.rename(from = bundle.original.path,
#            to = bundle.destination.path)
}else{
error("please install devtools")
}
project.path <- "/Users/David/Documents/miscr1/"
source.path <- paste0(project.path, "Source")
package.path <- paste0(project.path, "/Package/miscr1.tar.gz")
setwd(source.path)
# Re-build the package and publishes it
#
if(!require(devtools)){
install.packages("devtools")
library("devtools")
}
if(require(devtools)){
project.path <- "/Users/David/Documents/miscr1/"
source.path <- paste0(project.path, "Source")
package.path <- paste0(project.path, "Package/miscr1.tar.gz")
setwd(source.path)
# TODO (DMD): Add auto-incrementation of the
#             version number in the DESCRIPTION file.
# First, build the development version,
# in R these are named "bundles".
devtools::build(path = package.path,
binary = FALSE)
# Then, build the binary version,
# for non-developers.
devtools::build(path = package.path,
binary = TRUE)
# The build will be located here:
#bundle.filename <- dir("/Users/David/Documents/miscr1/", pattern="*.tar.gz")
#bundle.original.path <- paste0(package.path,"/",bundle.filename)
#bundle.destination.path <- paste0(package.path,"/miscr1.tar.gz")
#file.rename(from = bundle.original.path,
#            to = bundle.destination.path)
}else{
error("please install devtools")
}
# Re-build the package and publishes it
#
if(!require(devtools)){
install.packages("devtools")
library("devtools")
}
if(require(devtools)){
project.path <- "/Users/David/Documents/miscr1/"
source.path <- paste0(project.path, "Source")
package.path <- paste0(project.path, "Package/miscr1.tar.gz")
setwd(source.path)
# TODO (DMD): Add auto-incrementation of the
#             version number in the DESCRIPTION file.
# First, build the development version,
# in R these are named "bundles".
devtools::build(path = package.path,
binary = FALSE)
# Then, build the binary version,
# for non-developers.
#devtools::build(path = package.path,
#                binary = TRUE)
# The build will be located here:
#bundle.filename <- dir("/Users/David/Documents/miscr1/", pattern="*.tar.gz")
#bundle.original.path <- paste0(package.path,"/",bundle.filename)
#bundle.destination.path <- paste0(package.path,"/miscr1.tar.gz")
#file.rename(from = bundle.original.path,
#            to = bundle.destination.path)
}else{
error("please install devtools")
}
project.path <- "/Users/David/Documents/miscr1/"
source.path <- paste0(project.path, "Source")
package.path <- paste0(project.path, "Package/miscr1.tar.gz")
setwd(source.path)
# TODO (DMD): Add auto-incrementation of the
#             version number in the DESCRIPTION file.
# First, build the development version,
# in R these are named "bundles".
devtools::build(path = package.path,
binary = FALSE)
project.path <- "/Users/David/Documents/miscr1"
source.path <- paste0(project.path, "/Source")
package.path <- paste0(project.path, "/Package")
setwd(source.path)
# TODO (DMD): Add auto-incrementation of the
#             version number in the DESCRIPTION file.
# First, build the development version,
# in R these are named "bundles".
devtools::build(path = package.path,
binary = FALSE)
# Re-build the package and publishes it
#
if(!require(devtools)){
install.packages("devtools")
library("devtools")
}
if(require(devtools)){
project.path <- "/Users/David/Documents/miscr1"
source.path <- paste0(project.path, "/Source")
package.path <- paste0(project.path, "/Package")
setwd(source.path)
# TODO (DMD): Add auto-incrementation of the
#             version number in the DESCRIPTION file.
# First, build the development version,
# in R these are named "bundles".
devtools::build(path = package.path,
binary = FALSE)
# Then, build the binary version,
# for non-developers.
#devtools::build(path = package.path,
#                binary = TRUE)
# The build will be located here:
bundle.filename <- dir("/Users/David/Documents/miscr1/Package/", pattern="*.tar.gz")
bundle.original.path <- paste0(package.path,"/",bundle.filename)
bundle.destination.path <- paste0(package.path,"/miscr1.tar.gz")
file.rename(from = bundle.original.path,
to = bundle.destination.path)
}else{
error("please install devtools")
}
help(install.packages)
# Install the bundled version of the "miscr1" package
# For developers
# Require: devtools
if(!require(devtools)){
install.packages("devtools")
library(devtools)
}
if(require(devtools)){
# devtools::install_github()
package.name <- "miscr1"
package.url <- "https://github.com/daviddoret/miscr1/blob/master/Package/miscr1.tar.gz"
#for compile binaries install :
#   install.packages('xxx', repo='http://repo_adress')
# for source install :
install.packages(package.name, repo=package.url, type='source')
}
else
{
warning("Bundled R packages are available for development purposes. Hence, they require the \"devtools\" package. Please install the \"devtools\" package with the following command: \"install.packages('devtools')\".")
}
# Install the bundled version of the "miscr1" package
# For developers
# Require: devtools
if(!require(devtools)){
install.packages("devtools")
library(devtools)
}
if(require(devtools)){
# devtools::install_github()
package.name <- "miscr1"
package.url <- "https://github.com/daviddoret/miscr1/blob/master/Source"
#for compile binaries install :
#   install.packages('xxx', repo='http://repo_adress')
# for source install :
install.packages(package.name, repo=package.url, type='source')
}
else
{
warning("Bundled R packages are available for development purposes. Hence, they require the \"devtools\" package. Please install the \"devtools\" package with the following command: \"install.packages('devtools')\".")
}
# Install the bundled version of the "miscr1" package
# For developers
# Require: devtools
if(!require(devtools)){
install.packages("devtools")
library(devtools)
}
if(require(devtools)){
# devtools::install_github()
package.name <- "miscr1"
package.url <- "https://github.com/daviddoret/miscr1/blob/master/Package/miscr1.tar.gz"
#for compile binaries install :
#   install.packages('xxx', repo='http://repo_adress')
# for source install :
install.packages(pkgs = "miscr1",
repos = package.url,
type='source')
}
else
{
warning("Bundled R packages are available for development purposes. Hence, they require the \"devtools\" package. Please install the \"devtools\" package with the following command: \"install.packages('devtools')\".")
}
# Install the bundled version of the "miscr1" package
# For developers
# Require: devtools
if(!require(devtools)){
install.packages("devtools")
library(devtools)
}
if(require(devtools)){
# devtools::install_github()
package.name <- "miscr1"
package.url <- "https://github.com/daviddoret/miscr1/blob/master/Package/miscr1.tar.gz?raw=true"
#for compile binaries install :
#   install.packages('xxx', repo='http://repo_adress')
# for source install :
install.packages(pkgs = "miscr1",
repos = package.url,
type='source')
}
else
{
warning("Bundled R packages are available for development purposes. Hence, they require the \"devtools\" package. Please install the \"devtools\" package with the following command: \"install.packages('devtools')\".")
}
# Install the bundled version of the "miscr1" package
# For developers
# Require: devtools
if(!require(devtools)){
install.packages("devtools")
library(devtools)
}
if(require(devtools)){
# devtools::install_github()
package.name <- "miscr1"
package.url <- "https://github.com/daviddoret/miscr1/blob/master/Package/miscr1.tar.gz?raw=true"
#for compile binaries install :
#   install.packages('xxx', repo='http://repo_adress')
# for source install :
install.packages(pkgs = "miscr1",
repos = package.url,
type='source')
}else{
warning("Bundled R packages are available for development purposes. Hence, they require the \"devtools\" package. Please install the \"devtools\" package with the following command: \"install.packages('devtools')\".")
}
# Install the bundled version of the "miscr1" package
# For developers
# Require: devtools
if(!require(devtools)){
install.packages("devtools")
library(devtools)
}
if(require(devtools)){
# devtools::install_github()
package.name <- "miscr1"
package.url <- "https://github.com/daviddoret/miscr1/blob/master/Package/miscr1.tar.gz?raw=true"
#for compile binaries install :
#   install.packages('xxx', repo='http://repo_adress')
# for source install :
#
install.packages(repos = package.url,
type='source')
}else{
warning("Bundled R packages are available for development purposes. Hence, they require the \"devtools\" package. Please install the \"devtools\" package with the following command: \"install.packages('devtools')\".")
}
# Install the bundled version of the "miscr1" package
# For developers
# Require: devtools
if(!require(devtools)){
install.packages("devtools")
library(devtools)
}
if(require(devtools)){
# devtools::install_github()
package.name <- "miscr1"
package.url <- "https://github.com/daviddoret/miscr1/blob/master/Package/miscr1.tar.gz?raw=true"
#for compile binaries install :
#   install.packages('xxx', repo='http://repo_adress')
# for source install :
#
install.packages(pkgs = package.url,
repos = package.url,
type='source')
}else{
warning("Bundled R packages are available for development purposes. Hence, they require the \"devtools\" package. Please install the \"devtools\" package with the following command: \"install.packages('devtools')\".")
}
help(install_github)
install_github(repo = "miscr1", subdir = "Package")
install_github(repo = "miscr1", subdir = "Package", auth_user = "daviddoret")
install.url(url = package.url)
install_url(url = package.url)
install_github(repo = "daviddoret/miscr1", subdir = "Package")
install_github(repo = "miscr1", subdir = "Package")
# Install the bundled version of the "miscr1" package
# For developers
# Require: devtools
if(!require(devtools)){
install.packages("devtools")
library(devtools)
}
if(require(devtools)){
# devtools::install_github()
package.name <- "miscr1"
package.url <- "https://github.com/daviddoret/miscr1/raw/master/Package/miscr1.tar.gz?raw=true"
#for compile binaries install :
#   install.packages('xxx', repo='http://repo_adress')
# for source install :
#
install.packages(pkgs = package.name,
repos = package.url,
type='source')
}else{
warning("Bundled R packages are available for development purposes. Hence, they require the \"devtools\" package. Please install the \"devtools\" package with the following command: \"install.packages('devtools')\".")
}
install_github(repo = "miscr1", subdir = "Package")
package.name <- "miscr1"
package.url <- "https://github.com/daviddoret/miscr1/raw/master/Package/miscr1.tar.gz?raw=true"
package.name <- "miscr1"
package.url <- "https://github.com/daviddoret/miscr1/raw/master/Package/miscr1.tar.gz"
install_url(url = package.url)
library(miscr1)
Annuity.PresentValue()
Annuity.PresentValue(fixed.interest.rate = 1.05)
help(Annuity.PresentValue)
