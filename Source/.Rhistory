install_url(url = package.url)
install_github(repo = "daviddoret/miscr1", subdir = "Package")
install_github(repo = "miscr1", subdir = "Package")
# Install the bundled version of the "miscr1" package
# For developers
# Require: devtools
if(!require(devtools)){
install.packages("devtools")
library(devtools)
}
if(require(devtools)){
# devtools::install_github()
package.name <- "miscr1"
package.url <- "https://github.com/daviddoret/miscr1/raw/master/Package/miscr1.tar.gz?raw=true"
#for compile binaries install :
#   install.packages('xxx', repo='http://repo_adress')
# for source install :
#
install.packages(pkgs = package.name,
repos = package.url,
type='source')
}else{
warning("Bundled R packages are available for development purposes. Hence, they require the \"devtools\" package. Please install the \"devtools\" package with the following command: \"install.packages('devtools')\".")
}
install_github(repo = "miscr1", subdir = "Package")
package.name <- "miscr1"
package.url <- "https://github.com/daviddoret/miscr1/raw/master/Package/miscr1.tar.gz?raw=true"
package.name <- "miscr1"
package.url <- "https://github.com/daviddoret/miscr1/raw/master/Package/miscr1.tar.gz"
install_url(url = package.url)
library(miscr1)
Annuity.PresentValue()
Annuity.PresentValue(fixed.interest.rate = 1.05)
help(Annuity.PresentValue)
help(require)
print(library(miscr1))
print(require(miscr1))
help(install_url)
help(install.packages)
10/14
grades <- c(13/14,13/15,10/14,13/15,10/10)
mean(grades)
10/14
grades2 <- c(grades,3/10)
mean(grades2)
grades2 <- c(grades,4/10)
mean(grades2)
grades2 <- c(grades,5/10)
mean(grades2)
# Re-build the package and publishes it
#
if(!require(devtools)){
install.packages("devtools")
library("devtools")
}
if(require(devtools)){
project.path <- "/Users/David/Documents/miscr1"
source.path <- paste0(project.path, "/Source")
package.path <- paste0(project.path, "/Package")
setwd(source.path)
# TODO (DMD): Add auto-incrementation of the
#             version number in the DESCRIPTION file.
# First, build the development version,
# in R these are named "bundles".
devtools::build(path = package.path,
binary = FALSE)
# Then, build the binary version,
# for non-developers.
#devtools::build(path = package.path,
#                binary = TRUE)
# The build will be located here:
bundle.filename <- dir("/Users/David/Documents/miscr1/Package/", pattern="*.tar.gz")
bundle.original.path <- paste0(package.path,"/",bundle.filename)
bundle.destination.path <- paste0(package.path,"/miscr1.tar.gz")
file.rename(from = bundle.original.path,
to = bundle.destination.path)
}else{
error("please install devtools")
}
# Re-build the package and publishes it
#
if(!require(devtools)){
install.packages("devtools")
library("devtools")
}
if(require(devtools)){
project.path <- "/Users/David/Documents/miscr1"
source.path <- paste0(project.path, "/Source")
package.path <- paste0(project.path, "/Package")
setwd(source.path)
# TODO (DMD): Add auto-incrementation of the
#             version number in the DESCRIPTION file.
# First, build the development version,
# in R these are named "bundles".
devtools::build(path = package.path,
binary = FALSE)
# Then, build the binary version,
# for non-developers.
#devtools::build(path = package.path,
#                binary = TRUE)
# The build will be located here:
bundle.filename <- dir("/Users/David/Documents/miscr1/Package/", pattern="*.tar.gz")
bundle.original.path <- paste0(package.path,"/",bundle.filename)
bundle.destination.path <- paste0(package.path,"/miscr1.tar.gz")
#file.rename(from = bundle.original.path,
#            to = bundle.destination.path)
}else{
error("please install devtools")
}
install.packages("pdflatex")
library(pdflatex)
# Re-build the package and publishes it
#
if(!require(devtools)){
install.packages("devtools")
library("devtools")
}
if(require(devtools)){
project.path <- "/Users/David/Documents/miscr1"
source.path <- paste0(project.path, "/Source")
package.path <- paste0(project.path, "/Package")
setwd(source.path)
# TODO (DMD): Add auto-incrementation of the
#             version number in the DESCRIPTION file.
# First, build the development version,
# in R these are named "bundles".
devtools::build(path = package.path,
binary = FALSE)
# Then, build the binary version,
# for non-developers.
#devtools::build(path = package.path,
#                binary = TRUE)
# The build will be located here:
bundle.filename <- dir("/Users/David/Documents/miscr1/Package/", pattern="*.tar.gz")
bundle.original.path <- paste0(package.path,"/",bundle.filename)
bundle.destination.path <- paste0(package.path,"/miscr1.tar.gz")
#file.rename(from = bundle.original.path,
#            to = bundle.destination.path)
}else{
error("please install devtools")
}
system("pdflatex --version")
help(Sys.getenv)
Sys.getenv(PATH)
Sys.getenv("PATH")
Sys.setenv(PATH="/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:/usr/texbin")
Sys.getenv("PATH")
# Re-build the package and publishes it
# On my Mac, I had to modify the original PATH variable to make
# the build function and overcome this error message:
#      pdflatex not found. Not building PDF vignettes.
#      '/Library/Frameworks/R.framework/Resources/bin/R' --vanilla CMD build  \
#     '/Users/David/Documents/miscr1/Source' --no-manual --no-resave-data  \
#     --no-vignettes
#Sys.getenv("PATH")
#[1] "/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin"
#> Sys.setenv(PATH="/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:/usr/texbin")
#> Sys.getenv("PATH")
#[1] "/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:/usr/texbin"
if(!require(devtools)){
install.packages("devtools")
library("devtools")
}
if(require(devtools)){
project.path <- "/Users/David/Documents/miscr1"
source.path <- paste0(project.path, "/Source")
package.path <- paste0(project.path, "/Package")
setwd(source.path)
# TODO (DMD): Add auto-incrementation of the
#             version number in the DESCRIPTION file.
# First, build the development version,
# in R these are named "bundles".
devtools::build(path = package.path,
binary = FALSE)
# Then, build the binary version,
# for non-developers.
#devtools::build(path = package.path,
#                binary = TRUE)
# The build will be located here:
bundle.filename <- dir("/Users/David/Documents/miscr1/Package/", pattern="*.tar.gz")
bundle.original.path <- paste0(package.path,"/",bundle.filename)
bundle.destination.path <- paste0(package.path,"/miscr1.tar.gz")
#file.rename(from = bundle.original.path,
#            to = bundle.destination.path)
}else{
error("please install devtools")
}
# Re-build the package and publishes it
# On my Mac, I had to modify the original PATH variable to make
# the build function and overcome this error message:
#      pdflatex not found. Not building PDF vignettes.
#      '/Library/Frameworks/R.framework/Resources/bin/R' --vanilla CMD build  \
#     '/Users/David/Documents/miscr1/Source' --no-manual --no-resave-data  \
#     --no-vignettes
#Sys.getenv("PATH")
#[1] "/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin"
#> Sys.setenv(PATH="/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:/usr/texbin")
#> Sys.getenv("PATH")
#[1] "/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:/usr/texbin"
if(!require(devtools)){
install.packages("devtools")
library("devtools")
}
if(require(devtools)){
project.path <- "/Users/David/Documents/miscr1"
source.path <- paste0(project.path, "/Source")
package.path <- paste0(project.path, "/Package")
setwd(source.path)
# TODO (DMD): Add auto-incrementation of the
#             version number in the DESCRIPTION file.
# First, build the development version,
# in R these are named "bundles".
#devtools::build(path = package.path,
#                binary = FALSE)
# Then, build the binary version,
# for non-developers.
devtools::build(path = package.path,
binary = TRUE)
# The build will be located here:
bundle.filename <- dir("/Users/David/Documents/miscr1/Package/", pattern="*.tar.gz")
bundle.original.path <- paste0(package.path,"/",bundle.filename)
bundle.destination.path <- paste0(package.path,"/miscr1.tar.gz")
#file.rename(from = bundle.original.path,
#            to = bundle.destination.path)
}else{
error("please install devtools")
}
install.packages("Quandl")
# Re-build the package and publishes it
# On my Mac, I had to modify the original PATH variable to make
# the build function and overcome this error message:
#      pdflatex not found. Not building PDF vignettes.
#      '/Library/Frameworks/R.framework/Resources/bin/R' --vanilla CMD build  \
#     '/Users/David/Documents/miscr1/Source' --no-manual --no-resave-data  \
#     --no-vignettes
#Sys.getenv("PATH")
#[1] "/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin"
#> Sys.setenv(PATH="/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:/usr/texbin")
#> Sys.getenv("PATH")
#[1] "/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:/usr/texbin"
if(!require(devtools)){
install.packages("devtools")
library("devtools")
}
if(require(devtools)){
project.path <- "/Users/David/Documents/miscr1"
source.path <- paste0(project.path, "/Source")
package.path <- paste0(project.path, "/Package")
setwd(source.path)
# TODO (DMD): Add auto-incrementation of the
#             version number in the DESCRIPTION file.
# First, build the development version,
# in R these are named "bundles".
#devtools::build(path = package.path,
#                binary = FALSE)
# Then, build the binary version,
# for non-developers.
devtools::build(path = package.path,
binary = TRUE)
# The build will be located here:
bundle.filename <- dir("/Users/David/Documents/miscr1/Package/", pattern="*.tar.gz")
bundle.original.path <- paste0(package.path,"/",bundle.filename)
bundle.destination.path <- paste0(package.path,"/miscr1.tar.gz")
#file.rename(from = bundle.original.path,
#            to = bundle.destination.path)
}else{
error("please install devtools")
}
# Re-build the package and publishes it
# On my Mac, I had to modify the original PATH variable to make
# the build function and overcome this error message:
#      pdflatex not found. Not building PDF vignettes.
#      '/Library/Frameworks/R.framework/Resources/bin/R' --vanilla CMD build  \
#     '/Users/David/Documents/miscr1/Source' --no-manual --no-resave-data  \
#     --no-vignettes
#Sys.getenv("PATH")
#[1] "/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin"
#> Sys.setenv(PATH="/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:/usr/texbin")
#> Sys.getenv("PATH")
#[1] "/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:/usr/texbin"
if(!require(devtools)){
install.packages("devtools")
library("devtools")
}
if(require(devtools)){
project.path <- "/Users/David/Documents/miscr1"
source.path <- paste0(project.path, "/Source")
package.path <- paste0(project.path, "/Package")
setwd(source.path)
# TODO (DMD): Add auto-incrementation of the
#             version number in the DESCRIPTION file.
# First, build the development version,
# in R these are named "bundles".
#devtools::build(path = package.path,
#                binary = FALSE)
# Then, build the binary version,
# for non-developers.
devtools::build(path = package.path,
binary = TRUE)
# The build will be located here:
bundle.filename <- dir("/Users/David/Documents/miscr1/Package/", pattern="*.tar.gz")
bundle.original.path <- paste0(package.path,"/",bundle.filename)
bundle.destination.path <- paste0(package.path,"/miscr1.tar.gz")
#file.rename(from = bundle.original.path,
#            to = bundle.destination.path)
}else{
error("please install devtools")
}
help(install.packages)
# Install the bundled version of the "miscr1" package
# For developers
# Require: devtools
# TODOO (DMD): Option between binary and bundle versions.
# Check if "devtools" is installed.
if(!require(devtools)){
# "devtools" is not installed. Install it and load it.
install.packages("devtools")
library(devtools)
}
if(require(devtools)){
package.name <- "miscr1"
package.url <- "https://github.com/daviddoret/miscr1/raw/master/Package/miscr1.tar.gz"
# Curiously, I encountered various errors with the install_github function.
# Previous version: devtools::install_github(blablabla)
install_url(url = package.url)
}else{
warning("Bundled R packages are available for development purposes. Hence, they require the \"devtools\" package. Please install the \"devtools\" package with the following command: \"install.packages('devtools')\".")
}
install.packages(pkgs="miscr1",repos="https://github.com/daviddoret/miscr1/raw/master/Package/miscr1_latestversion.tgz")
# Re-build the package and publishes it
# on my mac, I had to install MacTex
# On my Mac, I had to modify the original PATH variable to make
# the build function and overcome this error message:
#      pdflatex not found. Not building PDF vignettes.
#      '/Library/Frameworks/R.framework/Resources/bin/R' --vanilla CMD build  \
#     '/Users/David/Documents/miscr1/Source' --no-manual --no-resave-data  \
#     --no-vignettes
#Sys.getenv("PATH")
#[1] "/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin"
#> Sys.setenv(PATH="/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:/usr/texbin")
#> Sys.getenv("PATH")
#[1] "/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:/usr/texbin"
if(!require(devtools)){
install.packages("devtools")
library("devtools")
}
if(require(devtools)){
project.path <- "/Users/David/Documents/miscr1"
source.path <- paste0(project.path, "/Source")
package.path <- paste0(project.path, "/Package")
setwd(source.path)
# TODO (DMD): Add auto-incrementation of the
#             version number in the DESCRIPTION file.
# First, build the development version,
# in R these are named "bundles".
devtools::build(path = package.path,
binary = FALSE)
# Then, build the binary version,
# for non-developers.
devtools::build(path = package.path,
binary = TRUE)
# The build will be located here:
bundle.filename <- dir("/Users/David/Documents/miscr1/Package/", pattern="*.tar.gz")
bundle.original.path <- paste0(package.path,"/",bundle.filename)
bundle.destination.path <- paste0(package.path,"/miscr1.tar.gz")
#file.rename(from = bundle.original.path,
#            to = bundle.destination.path)
}else{
error("please install devtools")
}
help(file.copy)
Sys.dir()
getwd()
# Re-build the package and publishes it
# on my mac, I had to install MacTex
# On my Mac, I had to modify the original PATH variable to make
# the build function and overcome this error message:
#      pdflatex not found. Not building PDF vignettes.
#      '/Library/Frameworks/R.framework/Resources/bin/R' --vanilla CMD build  \
#     '/Users/David/Documents/miscr1/Source' --no-manual --no-resave-data  \
#     --no-vignettes
#Sys.getenv("PATH")
#[1] "/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin"
#> Sys.setenv(PATH="/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:/usr/texbin")
#> Sys.getenv("PATH")
#[1] "/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:/usr/texbin"
binary.latestversion.path <- "/Users/David/Documents/miscr1/Package/miscr1_latestversion.tgz"
# TODO: Make it version-dynamic:
binary.currentversion.path <- "/Users/David/Documents/miscr1/Package/miscr1_0.1.tgz"
if(!require(devtools)){
install.packages("devtools")
library("devtools")
}
if(require(devtools)){
project.path <- "/Users/David/Documents/miscr1"
source.path <- paste0(project.path, "/Source")
package.path <- paste0(project.path, "/Package")
setwd(source.path)
# TODO (DMD): Add auto-incrementation of the
#             version number in the DESCRIPTION file.
# First, build the development version,
# in R these are named "bundles".
devtools::build(path = package.path,
binary = FALSE)
# Then, build the binary version,
# for non-developers.
devtools::build(path = package.path,
binary = TRUE)
# The build will be located here:
bundle.filename <- dir("/Users/David/Documents/miscr1/Package/", pattern="*.tar.gz")
bundle.original.path <- paste0(package.path,"/",bundle.filename)
bundle.destination.path <- paste0(package.path,"/miscr1.tar.gz")
#file.rename(from = bundle.original.path,
#            to = bundle.destination.path)
file.copy(from = binary.currentversion.path,
to = binary.latestversion.path,
overwrite = TRUE)
}else{
error("please install devtools")
}
# Re-build the package and publishes it
# on my mac, I had to install MacTex
# On my Mac, I had to modify the original PATH variable to make
# the build function and overcome this error message:
#      pdflatex not found. Not building PDF vignettes.
#      '/Library/Frameworks/R.framework/Resources/bin/R' --vanilla CMD build  \
#     '/Users/David/Documents/miscr1/Source' --no-manual --no-resave-data  \
#     --no-vignettes
#Sys.getenv("PATH")
#[1] "/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin"
#> Sys.setenv(PATH="/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:/usr/texbin")
#> Sys.getenv("PATH")
#[1] "/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:/usr/texbin"
binary.latestversion.path <- "/Users/David/Documents/miscr1/Package/miscr1_latestversion.tgz"
binary.currentversion.path <- "/Users/David/Documents/miscr1/Package/miscr1_0.1.tgz"
source.latestversion.path <- "/Users/David/Documents/miscr1/Package/miscr1_latestversion.tar.gz"
source.currentversion.path <- "/Users/David/Documents/miscr1/Package/miscr1_0.1.tar.gz"
if(!require(devtools)){
install.packages("devtools")
library("devtools")
}
if(require(devtools)){
project.path <- "/Users/David/Documents/miscr1"
source.path <- paste0(project.path, "/Source")
package.path <- paste0(project.path, "/Package")
setwd(source.path)
# TODO (DMD): Add auto-incrementation of the
#             version number in the DESCRIPTION file.
# First, build the development version,
# in R these are named "bundles".
devtools::build(path = package.path,
binary = FALSE)
# Then, build the binary version,
# for non-developers.
devtools::build(path = package.path,
binary = TRUE)
# The build will be located here:
bundle.filename <- dir("/Users/David/Documents/miscr1/Package/", pattern="*.tar.gz")
bundle.original.path <- paste0(package.path,"/",bundle.filename)
bundle.destination.path <- paste0(package.path,"/miscr1.tar.gz")
#file.rename(from = bundle.original.path,
#            to = bundle.destination.path)
file.copy(from = binary.currentversion.path,
to = binary.latestversion.path,
overwrite = TRUE)
file.copy(from = source.currentversion.path,
to = source.latestversion.path,
overwrite = TRUE)
}else{
error("please install devtools")
}
download.file(url = "https://github.com/daviddoret/miscr1/raw/master/Package/miscr1_latestversion.tgz")
tempfile(pattern = "file", tmpdir = tempdir())
local.path <- tempfile(pattern = "file", tmpdir = tempdir())
download.file(url = "https://github.com/daviddoret/miscr1/raw/master/Package/miscr1_latestversion.tgz",
destination = local.path)
local.path <- tempfile(pattern = "file", tmpdir = tempdir())
download.file(url = "https://github.com/daviddoret/miscr1/raw/master/Package/miscr1_latestversion.tgz",
destfile = local.path)
local.path <- tempfile(pattern = "file", tmpdir = tempdir())
download.file(url = "http://github.com/daviddoret/miscr1/raw/master/Package/miscr1_latestversion.tgz",
destfile = local.path)
install.packages("RCurl")
library(RCurl)
help(write)
local.path <- tempfile(pattern = "file", tmpdir = tempdir())
package <- getBinaryURL(url = "https://github.com/daviddoret/miscr1/raw/master/Package/miscr1_latestversion.tgz",
ssl.verifypeer = FALSE)
write(x = package, file = local.path)
help(install.packages)
local.path <- tempfile(pattern = "file", tmpdir = tempdir())
package <- getBinaryURL(url = "https://github.com/daviddoret/miscr1/raw/master/Package/miscr1_latestversion.tgz",
ssl.verifypeer = FALSE)
write(x = package, file = local.path)
install.packages(pkgs = local.path,
repos = NULL)
tempdir()
local.path <- paste0(tempdir(),
"/miscr1.tgz")
package <- getBinaryURL(url = "https://github.com/daviddoret/miscr1/raw/master/Package/miscr1_latestversion.tgz",
ssl.verifypeer = FALSE)
write(x = package, file = local.path)
install.packages(pkgs = local.path,
repos = NULL)
local.path <- paste0(tempdir(),
"/miscr1.tgz")
package <- getBinaryURL(url = "https://github.com/daviddoret/miscr1/raw/master/Package/miscr1_latestversion.tgz",
ssl.verifypeer = FALSE)
write(x = package, file = local.path)
install.packages(pkgs = local.path,
repos = NULL,
type = "source")
